plugins {
    id 'java'
    id 'checkstyle'
    id 'pmd'
    id 'jacoco'
    id 'nebula.lint' version '17.7.0'
}

group 'no.sikt.nva'
version '1.0-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_11  // source-code version and must be <= targetCompatibility
targetCompatibility = JavaVersion.VERSION_11 // bytecode target version

repositories {
    mavenCentral()
}

jar {
    //Duplicatestrategy is done because log4j.xml settings gets duplicated
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        //Makes the ja
        attributes "Main-Class": "no.sikt.nva.BrageMigrationCommand"
    }

    from {
        //Makes sure we includes all dependencies into the same jar.
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

dependencies {

    testImplementation group: 'com.github.stefanbirkner', name: 'system-lambda', version: '1.2.1'
    testImplementation group: 'org.hamcrest', name: 'hamcrest', version: '2.2'
    testImplementation group: 'org.hamcrest', name: 'hamcrest-core', version: '2.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j18-impl', version: '2.17.2'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.36'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.17.2'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.2'

    implementation group: 'info.picocli', name: 'picocli', version: '4.6.3'
    annotationProcessor 'info.picocli:picocli-codegen:4.6.3'


    implementation group: 'com.github.bibsysdev', name: 'core', version: '1.25.7'
    implementation group: 'com.github.bibsysdev', name: 'json', version: '1.25.7'

    implementation group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: '4.0.0'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.3'

}


compileJava {
    //Done to make picoli annotation processor:
    options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
}


pmd {
    ruleSetConfig = rootProject.resources.text.fromFile('config/pmd/ruleset.xml')
    ruleSets = []
    ignoreFailures = false
}

test {
    useJUnitPlatform()
    failFast = true
    finalizedBy jacocoTestReport
}

tasks.withType(Checkstyle) {
    exclude('*generated')
    reports {
        xml.enabled false
        html.enabled true
        html.stylesheet rootProject.resources.text.fromFile('config/checkstyle/checkstyle-simple.xsl')
    }
}

gradleLint {
    rules = ['all-dependency']
    reportFormat = 'html'
    reportOnlyFixableViolations = true
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/reports/jacoco")
    }
}

check.dependsOn jacocoTestCoverageVerification
jacocoTestCoverageVerification.dependsOn(jacocoTestReport)

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'METHOD'
                value = 'COVEREDRATIO'
                minimum = 0.8
            }
        }

        rule {
            limit {
                counter = 'CLASS'
                value = 'COVEREDRATIO'
                minimum = 0.8
            }
        }
    }
}